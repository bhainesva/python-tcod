name: Python package (MacOS)

on:
  push:
  pull_request:
  release:
    types: [created]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["macos-latest"]
        python-version: ["3.7.9"]

    steps:
      # v2 breaks `git describe` so v1 is needed.
      # https://github.com/actions/checkout/issues/272
      - uses: actions/checkout@v1
      - name: Checkout submodules
        run: |
          git submodule update --init --recursive --depth 1
      - name: Print git describe
        run: |
          git describe
      - name: Set up Mac Python ${{ matrix.python-version }}
        # actions/setup-python can't be used as it builds less portable extensions.
        env:
          MB_PYTHON_VERSION: ${{ matrix.python-version }}
        run: |
          source .travis/install_python.sh
          install_python
          $PYTHON_EXE -m venv venv
          source venv/bin/activate
          echo "$PATH" >> $GITHUB_PATH
      - name: Print Python version
        run: |
          python -VV
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov pytest-benchmark wheel twine
          pip install git+https://github.com/HexDecimal/delocate.git@loader_path
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Build package.
        run: |
          python setup.py sdist develop bdist_wheel --py-limited-api=cp36
      - name: Test with pytest
        run: |
          pytest --no-window --cov-report=xml
      - uses: codecov/codecov-action@v1
      - name: Package binary files
        run: |
          delocate-wheel -v dist/*.whl
          delocate-listdeps --all dist/*.whl
      - name: Archive wheel
        uses: actions/upload-artifact@v2
        with:
          name: wheel-macos
          path: dist/*.whl
          retention-days: 1
      - name: Upload to PyPI
        if: github.event_name == 'release'
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine upload --skip-existing dist/*

  isolated_test:
    name: Verify wheel dependencies
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["macos-latest"]
        python-version: ["3.x"]
    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/download-artifact@v2
        with:
          name: wheel-macos
          path: dist
      - name: Install tcod from wheel
        run: |
          python -m pip install dist/*.whl
      - name: Verify dependency correctness
        run: |
          python -c "import tcod"
