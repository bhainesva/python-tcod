# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Package

on:
  push:
  pull_request:
  release:
    types: [created]

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['ubuntu-20.04', 'windows-2019']
        python-version: ['3.6', '3.7', '3.8', '3.9', 'pypy-3.6', 'pypy-3.7']
      fail-fast: false

    steps:
    - name: Checkout code
      # v2 breaks `git describe` so v1 is needed.
      # https://github.com/actions/checkout/issues/272
      uses: actions/checkout@v1
    - name: Checkout submodules
      run: |
        git submodule update --init --recursive --depth 1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install APT dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install libsdl2-dev xvfb
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 mypy pytest pytest-cov pytest-benchmark black isort wheel
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Initialize package
      run: |
        python setup.py check  # Creates tcod/version.py.
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 tcod/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 tcod/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Check type hints with MyPy
      if: ${{ matrix.python-version != '3.6' }}
      run: |
        mypy tcod/
    - name: Check formatting with Black
      run: |
        black --check tcod/
    - name: Check import order
      run: |
        isort tcod/ --check --diff
        isort tests/ --check --diff
        isort examples/ --check --diff --thirdparty tcod
    - name: Build package.
      run: |
        python setup.py build sdist develop bdist_wheel --py-limited-api cp36  # Install the package in-place.
    - name: Test with pytest
      if: runner.os == 'Windows'
      run: |
        pytest --cov-report=xml
    - name: Test with pytest
      if: runner.os != 'Windows'
      run: |
        xvfb-run --auto-servernum pytest --cov-report=xml
    - uses: codecov/codecov-action@v1
    - name: Upload to PyPI
      if: github.event_name == 'release' && runner.os != 'Linux'
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload --skip-existing dist/*
